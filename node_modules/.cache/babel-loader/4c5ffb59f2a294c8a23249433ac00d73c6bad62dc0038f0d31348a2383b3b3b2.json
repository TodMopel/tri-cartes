{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/Draggable.js\",\n  _s = $RefreshSig$();\n// Draggable.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Draggable = ({\n  children\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  const [currentOffset, setCurrentOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const targetRef = useRef(null);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (isDragging) {\n        const deltaX = e.clientX - dragStartX + currentOffset.x;\n        const deltaY = e.clientY - dragStartY + currentOffset.y;\n\n        // Appliquer la translation avec translate3d\n        const transformValue = `translate3d(${deltaX}px, ${deltaY}px, 0)`;\n        targetRef.current.style.transform = transformValue;\n      }\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragStartX, dragStartY, currentOffset]);\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartY(e.clientY);\n    targetRef.current = e.currentTarget;\n    const currentTransform = targetRef.current.style.transform;\n    console.log('Current Transform:', currentTransform);\n\n    // Diviser la chaîne de transformation en fonction des virgules et des espaces blancs\n    const transformValues = currentTransform.split(/[\\s,]+/);\n\n    // Extraire les valeurs de translation\n    const translateX = parseFloat(transformValues[0]);\n    const translateY = parseFloat(transformValues[1]);\n    console.log('Translate X:', translateX);\n    console.log('Translate Y:', translateY);\n\n    // Vérifier si les valeurs sont des nombres valides\n    if (!isNaN(translateX) && !isNaN(translateY)) {\n      console.log('Setting Current Offset:', {\n        x: translateX,\n        y: translateY\n      });\n      setCurrentOffset({\n        x: translateX,\n        y: translateY\n      });\n    } else {\n      console.log('Invalid Translation Values');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    style: {\n      cursor: isDragging ? 'grabbing' : 'grab'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Draggable, \"gkru7/+DTmzAtD2OjMDPyDHiWwM=\");\n_c = Draggable;\nexport default Draggable;\nvar _c;\n$RefreshReg$(_c, \"Draggable\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Draggable","children","_s","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","currentOffset","setCurrentOffset","x","y","targetRef","handleMouseMove","e","deltaX","clientX","deltaY","clientY","transformValue","current","style","transform","handleMouseUp","window","addEventListener","removeEventListener","handleMouseDown","currentTarget","currentTransform","console","log","transformValues","split","translateX","parseFloat","translateY","isNaN","onMouseDown","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/Draggable.js"],"sourcesContent":["// Draggable.js\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Draggable = ({ children }) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartX, setDragStartX] = useState(0);\n    const [dragStartY, setDragStartY] = useState(0);\n    const [currentOffset, setCurrentOffset] = useState({ x: 0, y: 0 });\n\n    const targetRef = useRef(null);\n\n    useEffect(() => {\n        const handleMouseMove = (e) => {\n            if (isDragging) {\n                const deltaX = e.clientX - dragStartX + currentOffset.x;\n                const deltaY = e.clientY - dragStartY + currentOffset.y;\n\n\n                // Appliquer la translation avec translate3d\n                const transformValue = `translate3d(${deltaX}px, ${deltaY}px, 0)`;\n                targetRef.current.style.transform = transformValue;\n            }\n        };\n\n        const handleMouseUp = () => {\n            setIsDragging(false);\n        };\n\n        if (isDragging) {\n            window.addEventListener('mousemove', handleMouseMove);\n            window.addEventListener('mouseup', handleMouseUp);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', handleMouseUp);\n        };\n    }, [isDragging, dragStartX, dragStartY, currentOffset]);\n\n    const handleMouseDown = (e) => {\n        setIsDragging(true);\n        setDragStartX(e.clientX);\n        setDragStartY(e.clientY);\n\n        targetRef.current = e.currentTarget;\n\n        const currentTransform = targetRef.current.style.transform;\n        console.log('Current Transform:', currentTransform);\n\n        // Diviser la chaîne de transformation en fonction des virgules et des espaces blancs\n        const transformValues = currentTransform.split(/[\\s,]+/);\n\n        // Extraire les valeurs de translation\n        const translateX = parseFloat(transformValues[0]);\n        const translateY = parseFloat(transformValues[1]);\n\n        console.log('Translate X:', translateX);\n        console.log('Translate Y:', translateY);\n\n        // Vérifier si les valeurs sont des nombres valides\n        if (!isNaN(translateX) && !isNaN(translateY)) {\n            console.log('Setting Current Offset:', {\n                x: translateX,\n                y: translateY,\n            });\n\n            setCurrentOffset({\n                x: translateX,\n                y: translateY,\n            });\n        } else {\n            console.log('Invalid Translation Values');\n        }\n\n    };\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default Draggable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}