{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/GamePage.js\",\n  _s = $RefreshSig$();\n// GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport CardPile from './CardPile';\nimport jobListData from './../data/jobList.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [gameData, setGameData] = useState({\n    jobList: [],\n    cardList: []\n  });\n  useEffect(() => {\n    fetchJobList();\n  }, []);\n  const fetchJobList = () => {\n    const jobListString = JSON.stringify(jobListData);\n    const jobListObject = JSON.parse(jobListString);\n    if (gameData.jobList.length <= 0) {\n      setGameData(prevGameData => ({\n        ...prevGameData,\n        jobList: Object.entries(jobListObject).map(([text, description]) => ({\n          text,\n          description\n        }))\n      }));\n      console.log(\"fetchJobList\", gameData.jobList);\n    }\n  };\n  const handleAddCard = pilePosition => {\n    const {\n      jobList\n    } = gameData;\n    if (jobList.length === 0) return;\n    const randomIndex = Math.floor(Math.random() * jobList.length);\n    const selectedJob = jobList[randomIndex];\n    const cardWidth = 100;\n    const newCard = {\n      position: {\n        x: pilePosition.x - cardWidth / 2,\n        y: pilePosition.y - cardWidth\n      },\n      text: selectedJob.text,\n      description: selectedJob.description\n    };\n    const updatedJobList = jobList.filter((_, index) => index !== randomIndex);\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      cardList: [...prevGameData.cardList, newCard],\n      jobList: updatedJobList\n    }));\n  };\n  const isCardPileDisabled = gameData.jobList.length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isCardPileDisabled && /*#__PURE__*/_jsxDEV(CardPile, {\n      addCard: handleAddCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), gameData.cardList.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      text: card.text,\n      position: card.position\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"xhgjdDU5/ZSUpdCkz+6Vkbbbjxw=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardPile","jobListData","jsxDEV","_jsxDEV","GamePage","_s","gameData","setGameData","jobList","cardList","fetchJobList","jobListString","JSON","stringify","jobListObject","parse","length","prevGameData","Object","entries","map","text","description","console","log","handleAddCard","pilePosition","randomIndex","Math","floor","random","selectedJob","cardWidth","newCard","position","x","y","updatedJobList","filter","_","index","isCardPileDisabled","children","addCard","fileName","_jsxFileName","lineNumber","columnNumber","card","_c","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/GamePage.js"],"sourcesContent":["// GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport CardPile from './CardPile';\nimport jobListData from './../data/jobList.json';\n\nconst GamePage = () => {\n    const [gameData, setGameData] = useState({\n        jobList: [],\n        cardList: [],\n    });\n\n    useEffect(() => {\n        fetchJobList();\n    }, []);\n\n    const fetchJobList = () => {\n        const jobListString = JSON.stringify(jobListData);\n        const jobListObject = JSON.parse(jobListString);\n\n        if (gameData.jobList.length <= 0) {\n\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            jobList: Object.entries(jobListObject).map(([text, description]) => ({ text, description })),\n        }));\n            console.log(\"fetchJobList\", gameData.jobList)\n        }\n    };\n\n    const handleAddCard = (pilePosition) => {\n        const { jobList } = gameData;\n\n        if (jobList.length === 0) return;\n\n        const randomIndex = Math.floor(Math.random() * jobList.length);\n        const selectedJob = jobList[randomIndex];\n\n        const cardWidth = 100; \n        const newCard = {\n            position: { x: pilePosition.x - cardWidth / 2, y: pilePosition.y - cardWidth },\n            text: selectedJob.text,\n            description: selectedJob.description,\n        };\n\n        const updatedJobList = jobList.filter((_, index) => index !== randomIndex);\n\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            cardList: [...prevGameData.cardList, newCard],\n            jobList: updatedJobList,\n        }));\n    };\n\n    const isCardPileDisabled = gameData.jobList.length === 0;\n\n    return (\n\n        <div>\n            {!isCardPileDisabled && (\n                <CardPile addCard={handleAddCard} />\n            )}\n            {gameData.cardList.map((card, index) => (\n                <Card key={index} text={card.text} position={card.position}/>\n            ))}\n        </div>\n    );\n};\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}