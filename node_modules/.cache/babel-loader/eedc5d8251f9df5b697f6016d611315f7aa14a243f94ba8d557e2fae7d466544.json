{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/Draggable.js\",\n  _s = $RefreshSig$();\n// Draggable.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Draggable = ({\n  children\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  const targetRef = useRef(null);\n  const currentTransformRef = useRef({\n    x: 0,\n    y: 0,\n    scale: 1\n  });\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (isDragging) {\n        const deltaX = e.clientX - dragStartX;\n        const deltaY = e.clientY - dragStartY;\n        const {\n          x,\n          y,\n          scale\n        } = currentTransformRef.current;\n        console.log(transformRef);\n\n        // Appliquer la translation avec translate3d en tenant compte de la position actuelle\n        const transformValue = `translate3d(${x + deltaX}px, ${y + deltaY}px, 0) scale(${scale})`;\n        targetRef.current.style.transform = transformValue;\n      }\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n    };\n    if (isDragging) {\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragStartX, dragStartY]);\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartY(e.clientY);\n\n    // Stocker la référence de l'élément cible\n    targetRef.current = e.currentTarget;\n\n    // Extraire les composantes actuelles de la transformation\n    const currentTransform = targetRef.current.style.transform;\n    const match = currentTransform.match(/translate3d\\((.*?)px, (.*?)px, 0\\) scale\\((.*?)\\)/);\n    if (match) {\n      currentTransformRef.current = {\n        x: parseFloat(match[1]),\n        y: parseFloat(match[2]),\n        scale: parseFloat(match[3])\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleMouseDown,\n    style: {\n      cursor: isDragging ? 'grabbing' : 'grab'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Draggable, \"HaWIFnyGGJ+coDQE465e1xn2AII=\");\n_c = Draggable;\nexport default Draggable;\nvar _c;\n$RefreshReg$(_c, \"Draggable\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Draggable","children","_s","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","targetRef","currentTransformRef","x","y","scale","handleMouseMove","e","deltaX","clientX","deltaY","clientY","current","console","log","transformRef","transformValue","style","transform","handleMouseUp","window","addEventListener","removeEventListener","handleMouseDown","currentTarget","currentTransform","match","parseFloat","onMouseDown","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/Draggable.js"],"sourcesContent":["// Draggable.js\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Draggable = ({ children }) => {\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartX, setDragStartX] = useState(0);\n    const [dragStartY, setDragStartY] = useState(0);\n\n    const targetRef = useRef(null);\n    const currentTransformRef = useRef({ x: 0, y: 0, scale: 1 });\n\n    useEffect(() => {\n        const handleMouseMove = (e) => {\n            if (isDragging) {\n                const deltaX = e.clientX - dragStartX;\n                const deltaY = e.clientY - dragStartY;\n\n                const { x, y, scale } = currentTransformRef.current;\n\n                console.log(transformRef)\n\n                // Appliquer la translation avec translate3d en tenant compte de la position actuelle\n                const transformValue = `translate3d(${x + deltaX}px, ${y + deltaY}px, 0) scale(${scale})`;\n                targetRef.current.style.transform = transformValue;\n            }\n        };\n\n        const handleMouseUp = () => {\n            setIsDragging(false);\n        };\n\n        if (isDragging) {\n            window.addEventListener('mousemove', handleMouseMove);\n            window.addEventListener('mouseup', handleMouseUp);\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', handleMouseUp);\n        };\n    }, [isDragging, dragStartX, dragStartY]);\n\n    const handleMouseDown = (e) => {\n        setIsDragging(true);\n        setDragStartX(e.clientX);\n        setDragStartY(e.clientY);\n\n        // Stocker la référence de l'élément cible\n        targetRef.current = e.currentTarget;\n\n        // Extraire les composantes actuelles de la transformation\n        const currentTransform = targetRef.current.style.transform;\n        const match = currentTransform.match(/translate3d\\((.*?)px, (.*?)px, 0\\) scale\\((.*?)\\)/);\n\n        if (match) {\n            currentTransformRef.current = {\n                x: parseFloat(match[1]),\n                y: parseFloat(match[2]),\n                scale: parseFloat(match[3]),\n            };\n        }\n    };\n\n    return (\n        <div\n            onMouseDown={handleMouseDown}\n            style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default Draggable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}