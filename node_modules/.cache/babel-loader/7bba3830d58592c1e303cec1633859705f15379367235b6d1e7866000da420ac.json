{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/GamePage.js\",\n  _s = $RefreshSig$();\n// GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport CardPile from './CardPile';\nimport CardDropZone from './CardDropZone';\nimport Category from './Category';\nimport jobListData from './../data/jobList.json';\nimport CardDiscard from './CardDiscard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [gameData, setGameData] = useState({\n    jobList: [],\n    cardList: [],\n    selectedCardIndex: null,\n    categoryList: []\n  });\n  const isCardPileDisabled = gameData.jobList.length === 0;\n  const [mouseCoordinates, setMouseCoordinates] = useState({\n    x: 0,\n    y: 0,\n    isCardSelected: false\n  });\n  const pilePosition = {\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  };\n  const discardPosition = {\n    x: 110,\n    y: 80\n  };\n  useEffect(() => {\n    if (gameData.jobList.length <= 0) {\n      fetchJobList();\n    }\n  }, []);\n  const fetchJobList = () => {\n    const jobListString = JSON.stringify(jobListData);\n    const jobListObject = JSON.parse(jobListString);\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      jobList: Object.entries(jobListObject).map(([text, description]) => ({\n        text,\n        description\n      }))\n    }));\n    console.log(\"fetchJobList\");\n  };\n  const handleAddCard = pilePosition => {\n    const {\n      jobList\n    } = gameData;\n    if (jobList.length === 0) return;\n    const randomIndex = Math.floor(Math.random() * jobList.length);\n    const selectedJob = jobList[randomIndex];\n    const cardWidth = 100;\n    const newCard = {\n      position: {\n        x: pilePosition.x - cardWidth / 2,\n        y: pilePosition.y - 150\n      },\n      text: selectedJob.text,\n      description: selectedJob.description\n    };\n    const updatedJobList = jobList.filter((_, index) => index !== randomIndex);\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      cardList: [...prevGameData.cardList, newCard],\n      jobList: updatedJobList\n    }));\n  };\n  const handleAddCategory = () => {\n    const {\n      categoryList\n    } = gameData;\n    const newCategory = {\n      position: {\n        x: 10,\n        y: 20\n      },\n      text: \"categorie \" + (categoryList.length + 1)\n    };\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      categoryList: [...prevGameData.categoryList, newCategory]\n    }));\n  };\n  const handleCardDragStart = index => {\n    console.log(`Card picked! Card : ${gameData.cardList[index].text}`);\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      selectedCardIndex: index\n    }));\n  };\n  const handleCardDrop = () => {\n    console.log(`Card dropped! Card : ${gameData.cardList[gameData.selectedCardIndex].text}`);\n    setGameData(prevGameData => ({\n      ...prevGameData,\n      selectedCardIndex: null\n    }));\n  };\n  const handleCardEnterDropZone = ref => {\n    if (gameData.selectedCardIndex && ref) {\n      console.log(`Card hoverring! Card : ${gameData.cardList[gameData.selectedCardIndex].text},  ${ref.text}`);\n    }\n  };\n  const handleCardLeaveDropZone = ref => {\n    if (gameData.selectedCardIndex && ref) {\n      console.log(`Card outverring! Card : ${gameData.cardList[gameData.selectedCardIndex].text},  ${ref.text}`);\n    }\n  };\n  const handleMouseMove = e => {\n    const mouseX = e.clientX;\n    const mouseY = e.clientY;\n    setMouseCoordinates({\n      x: mouseX,\n      y: mouseY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: handleMouseMove,\n    onDrag: handleMouseMove,\n    children: [!isCardPileDisabled && /*#__PURE__*/_jsxDEV(CardPile, {\n      position: pilePosition,\n      addCard: handleAddCard,\n      counter: gameData.jobList.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardDiscard, {\n      position: discardPosition,\n      mouseCoordinates: mouseCoordinates,\n      cardEnterDropZone: handleCardEnterDropZone,\n      cardLeaveDropZone: handleCardLeaveDropZone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCategory,\n      children: \"cr\\xE9er une cat\\xE9gorie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), gameData.categoryList.map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n      text: category.text,\n      position: category.position,\n      mouseCoordinates: mouseCoordinates,\n      cardEnterDropZone: handleCardEnterDropZone,\n      cardLeaveDropZone: handleCardLeaveDropZone\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)), gameData.cardList.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      text: card.text,\n      position: card.position,\n      onDragStart: () => handleCardDragStart(index),\n      onDragEnd: handleCardDrop\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"eulq1Tutp64wgnhE6HzN2YaWjIc=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardPile","CardDropZone","Category","jobListData","CardDiscard","jsxDEV","_jsxDEV","GamePage","_s","gameData","setGameData","jobList","cardList","selectedCardIndex","categoryList","isCardPileDisabled","length","mouseCoordinates","setMouseCoordinates","x","y","isCardSelected","pilePosition","window","innerWidth","innerHeight","discardPosition","fetchJobList","jobListString","JSON","stringify","jobListObject","parse","prevGameData","Object","entries","map","text","description","console","log","handleAddCard","randomIndex","Math","floor","random","selectedJob","cardWidth","newCard","position","updatedJobList","filter","_","index","handleAddCategory","newCategory","handleCardDragStart","handleCardDrop","handleCardEnterDropZone","ref","handleCardLeaveDropZone","handleMouseMove","e","mouseX","clientX","mouseY","clientY","onMouseMove","onDrag","children","addCard","counter","fileName","_jsxFileName","lineNumber","columnNumber","cardEnterDropZone","cardLeaveDropZone","onClick","category","card","onDragStart","onDragEnd","_c","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/GamePage.js"],"sourcesContent":["// GamePage.js\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport CardPile from './CardPile';\nimport CardDropZone from './CardDropZone';\nimport Category from './Category';\nimport jobListData from './../data/jobList.json';\nimport CardDiscard from './CardDiscard';\n\nconst GamePage = () => {\n    const [gameData, setGameData] = useState({\n        jobList: [],\n        cardList: [],\n        selectedCardIndex: null,\n        categoryList: [],\n    });\n    const isCardPileDisabled = gameData.jobList.length === 0;\n    const [mouseCoordinates, setMouseCoordinates] = useState({\n        x: 0, y: 0 ,\n        isCardSelected: false});\n\n    const pilePosition = ({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n    const discardPosition = ({ x: 110, y: 80 });\n\n    useEffect(() => {\n        if (gameData.jobList.length <= 0) {\n            fetchJobList();\n        }\n    }, []);\n\n    const fetchJobList = () => {\n        const jobListString = JSON.stringify(jobListData);\n        const jobListObject = JSON.parse(jobListString);\n\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            jobList: Object.entries(jobListObject).map(([text, description]) => ({ text, description })),\n        }));\n        console.log(\"fetchJobList\");\n    };\n\n    const handleAddCard = (pilePosition) => {\n        const { jobList } = gameData;\n\n        if (jobList.length === 0) return;\n\n        const randomIndex = Math.floor(Math.random() * jobList.length);\n        const selectedJob = jobList[randomIndex];\n\n        const cardWidth = 100;\n        const newCard = {\n            position: { x: pilePosition.x - cardWidth / 2, y: pilePosition.y - 150 },\n            text: selectedJob.text,\n            description: selectedJob.description,\n        };\n\n        const updatedJobList = jobList.filter((_, index) => index !== randomIndex);\n\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            cardList: [...prevGameData.cardList, newCard],\n            jobList: updatedJobList,\n        }));\n    };\n\n    const handleAddCategory = () => {\n        const { categoryList } = gameData;\n\n        const newCategory = {\n            position: { x: 10, y: 20 },\n            text: \"categorie \" + (categoryList.length + 1),\n        }\n\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            categoryList: [...prevGameData.categoryList, newCategory],\n        }));\n    }\n\n    const handleCardDragStart = (index) => {\n        console.log(`Card picked! Card : ${gameData.cardList[index].text}`);\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            selectedCardIndex: index,\n        }));\n    };\n\n    const handleCardDrop = () => {\n        console.log(`Card dropped! Card : ${gameData.cardList[gameData.selectedCardIndex].text}`);\n        setGameData((prevGameData) => ({\n            ...prevGameData,\n            selectedCardIndex: null,\n        }));\n    };\n\n    const handleCardEnterDropZone = (ref) => {\n        if (gameData.selectedCardIndex && ref) {\n            console.log(`Card hoverring! Card : ${gameData.cardList[gameData.selectedCardIndex].text},  ${ref.text}`);\n        }\n    }\n\n    const handleCardLeaveDropZone = (ref) => {\n        if (gameData.selectedCardIndex && ref) {\n            console.log(`Card outverring! Card : ${gameData.cardList[gameData.selectedCardIndex].text},  ${ref.text}`);\n        }\n    }\n\n    const handleMouseMove = (e) => {\n        const mouseX = e.clientX;\n        const mouseY = e.clientY;\n\n        setMouseCoordinates({ x: mouseX, y: mouseY });\n    };\n\n    return (\n        <div onMouseMove={handleMouseMove}\n            onDrag={handleMouseMove}>\n            {!isCardPileDisabled && (\n                <CardPile\n                    position={pilePosition}\n\n                    addCard={handleAddCard}\n                    counter={gameData.jobList.length}\n                />\n            )}\n            <CardDiscard\n                position={discardPosition}\n\n                mouseCoordinates={mouseCoordinates}\n                cardEnterDropZone={handleCardEnterDropZone}\n                cardLeaveDropZone={handleCardLeaveDropZone}\n            />\n            <button onClick={handleAddCategory}>créer une catégorie</button>\n            {gameData.categoryList.map((category, index) => (\n                <Category\n                    key={index}\n                    text={category.text}\n                    position={category.position}\n\n                    mouseCoordinates={mouseCoordinates}\n                    cardEnterDropZone={handleCardEnterDropZone}\n                    cardLeaveDropZone={handleCardLeaveDropZone}\n                />\n            ))}\n            {gameData.cardList.map((card, index) => (\n                <Card\n                    key={index}\n                    text={card.text}\n                    position={card.position}\n\n                    onDragStart={() => handleCardDragStart(index)}\n                    onDragEnd={handleCardDrop}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}