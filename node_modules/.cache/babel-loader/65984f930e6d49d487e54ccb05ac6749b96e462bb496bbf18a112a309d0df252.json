{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import Draggable from'./Draggable';import Droppable from'./Droppable';import Card from'./Card';import config from'./../data/config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const InfoPanel=_ref=>{let{position,onDragStart,cardMoving,mousePosition,onCardDropInsideDropZone,zIndexOrder,droppedCard,onCardRestored}=_ref;const infoPanelRef=useRef();const thisSize=config.infoPanel.size;const panelSize=config.card.size;const dropZoneSize=config.card.size;const dropZoneRef=useRef();const[isDropZoneActive,setIsDropZoneActive]=useState(false);const handleCardEnter=()=>{console.log(\"Card entered infoPanel dropZone!\");setIsDropZoneActive(true);};const handleCardLeave=()=>{console.log(\"Card left infoPanel dropZone!\");setIsDropZoneActive(false);};useEffect(()=>{if(isDropZoneActive){onCardDropInsideDropZone(\"InfoPanel\");setIsDropZoneActive(false);}},[cardMoving]);const handleRecoverCard=()=>{if(droppedCard){const rect=infoPanelRef.current.getBoundingClientRect();const position={x:rect.left+6,y:rect.top+35};console.log(droppedCard.text);onCardRestored(position,droppedCard);}};return/*#__PURE__*/_jsx(Draggable,{initialPosition:position,size:thisSize,onDragStart:onDragStart,zIndexOrder:zIndexOrder,children:/*#__PURE__*/_jsxs(\"div\",{ref:infoPanelRef,className:\"column-content info-container\",style:{position:'absolute',width:thisSize.x,height:thisSize.y,left:position.x+'px',top:position.y+'px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-element-title\",children:config.infoPanel.title}),droppedCard?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"center-content info-container-panel  panel-txt\",style:{position:'absolute',top:-125+'px',left:-45+'px',width:panelSize.x*1.5,height:panelSize.y*1.5},children:/*#__PURE__*/_jsx(\"div\",{className:\"game-txt\",children:droppedCard.description})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:/*#__PURE__*/_jsxs(\"div\",{onClick:handleRecoverCard,className:\"card\",style:{width:dropZoneSize.x,height:dropZoneSize.y},children:[droppedCard.text,/*#__PURE__*/_jsx(\"div\",{className:\"game-txt\",style:{position:'absolute',top:80+'px',color:'darkgray'},children:config.infoPanel.buttonText})]})})]}):/*#__PURE__*/_jsx(Droppable,{cardMoving:cardMoving,mousePosition:mousePosition,onCardEnter:handleCardEnter,onCardLeave:handleCardLeave,children:/*#__PURE__*/_jsx(\"div\",{className:\"drop-zone-default\",style:{width:dropZoneSize.x,height:dropZoneSize.y,backgroundColor:!isDropZoneActive?'#FFCA0080':'transparent'}})})]})});};export default InfoPanel;","map":{"version":3,"names":["React","useRef","useState","useEffect","Draggable","Droppable","Card","config","jsx","_jsx","jsxs","_jsxs","InfoPanel","_ref","position","onDragStart","cardMoving","mousePosition","onCardDropInsideDropZone","zIndexOrder","droppedCard","onCardRestored","infoPanelRef","thisSize","infoPanel","size","panelSize","card","dropZoneSize","dropZoneRef","isDropZoneActive","setIsDropZoneActive","handleCardEnter","console","log","handleCardLeave","handleRecoverCard","rect","current","getBoundingClientRect","x","left","y","top","text","initialPosition","children","ref","className","style","width","height","title","description","onClick","color","buttonText","onCardEnter","onCardLeave","backgroundColor"],"sources":["/Users/todmopel/TheHangar/test deploy/tri-cartes/src/components/InfoPanel.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\nimport Card from './Card';\n\nimport config from './../data/config';\n\nconst InfoPanel = ({ position, onDragStart, cardMoving, mousePosition, onCardDropInsideDropZone, zIndexOrder, droppedCard, onCardRestored }) => {\n    const infoPanelRef = useRef();\n    const thisSize = config.infoPanel.size;\n    const panelSize = config.card.size;\n    const dropZoneSize = config.card.size;\n\n    const dropZoneRef = useRef();\n\n    const [isDropZoneActive, setIsDropZoneActive] = useState(false);\n\n    const handleCardEnter = () => {\n        console.log(`Card entered infoPanel dropZone!`);\n        setIsDropZoneActive(true);\n    };\n\n    const handleCardLeave = () => {\n        console.log(`Card left infoPanel dropZone!`);\n        setIsDropZoneActive(false);\n    };\n\n    useEffect(() => {\n        if (isDropZoneActive) {\n            onCardDropInsideDropZone(\"InfoPanel\");\n            setIsDropZoneActive(false);\n        }\n    }, [cardMoving]);\n\n    const handleRecoverCard = () => {\n        if (droppedCard) {\n            const rect = infoPanelRef.current.getBoundingClientRect();\n            const position = {\n                x: rect.left + 6,\n                y: rect.top + 35,\n            };\n            console.log(droppedCard.text);\n            onCardRestored(position, droppedCard)\n        }\n    };\n\n    return (\n        <Draggable\n            initialPosition={position}\n            size={thisSize}\n            onDragStart={onDragStart}\n            zIndexOrder={zIndexOrder}\n        >\n            <div\n                ref={infoPanelRef}\n                className=\"column-content info-container\"\n                style={{\n                    position: 'absolute',\n                    width: thisSize.x,\n                    height: thisSize.y,\n                    left: position.x + 'px',\n                    top: position.y + 'px',\n                }}\n            >\n\n                <div\n                    className=\"game-element-title\"\n                >\n                    {config.infoPanel.title}\n                </div>\n\n                {droppedCard ? (\n                    <div>\n                        <div\n                            className=\"center-content info-container-panel  panel-txt\"\n                            style={{\n                                position: 'absolute',\n                                top: -125 + 'px',\n                                left: -45 + 'px',\n                                width: panelSize.x * 1.5,\n                                height: panelSize.y * 1.5,\n                            }}\n                        >\n                            <div\n                                className=\"game-txt\"\n                            >\n                            {droppedCard.description}\n                            </div>\n                        </div>\n\n                        <div\n                            className=\"card-container\"\n                        >\n                            <div\n                                onClick={handleRecoverCard}\n                                className=\"card\"\n                                style={{\n                                    width: dropZoneSize.x,\n                                    height: dropZoneSize.y,\n                                }}\n                            >\n                                {droppedCard.text}\n                                <div\n                                    className=\"game-txt\"\n                                    style={{\n                                        position: 'absolute',\n\n                                        top: 80 + 'px',\n                                        color: 'darkgray',\n                                    }}\n                                >\n                                    {config.infoPanel.buttonText}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                        <Droppable\n                            cardMoving={cardMoving}\n                            mousePosition={mousePosition}\n                            onCardEnter={handleCardEnter}\n                            onCardLeave={handleCardLeave}\n                        >\n                            <div\n                                className=\"drop-zone-default\"\n                                style={{\n                                    width: dropZoneSize.x,\n                                    height: dropZoneSize.y,\n                                    backgroundColor: !isDropZoneActive ? '#FFCA0080' : 'transparent',\n                                }}\n                            >\n                            </div>\n                        </Droppable>\n                    )}\n            </div>\n        </Draggable>\n    );\n};\n\nexport default InfoPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}