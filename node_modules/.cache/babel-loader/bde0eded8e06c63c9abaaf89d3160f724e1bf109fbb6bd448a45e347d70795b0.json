{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/InfoPanel.js\",\n  _s = $RefreshSig$();\n// InfoPanel.js\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoPanel = ({\n  position,\n  onDragStart,\n  cardMoving,\n  mousePosition,\n  onCardDropInsideDropZone,\n  zIndexOrder,\n  droppedCard,\n  onCardRestored\n}) => {\n  _s();\n  const infoPanelRef = useRef();\n  const thisSize = {\n    x: 110,\n    y: 120\n  };\n  const dropZoneRef = useRef();\n  const dropZoneSize = {\n    x: 100,\n    y: 70\n  };\n  const [isDropZoneActive, setIsDropZoneActive] = useState(false);\n  const handleCardEnter = () => {\n    console.log(`Card entered infoPanel dropZone!`);\n    setIsDropZoneActive(true);\n  };\n  const handleCardLeave = () => {\n    console.log(`Card left infoPanel dropZone!`);\n    setIsDropZoneActive(false);\n  };\n  useEffect(() => {\n    if (isDropZoneActive) {\n      onCardDropInsideDropZone(\"InfoPanel\");\n      setIsDropZoneActive(false);\n    }\n  }, [cardMoving]);\n  const handleRecoverCard = () => {\n    if (droppedCard) {\n      const rect = infoPanelRef.current.getBoundingClientRect();\n      const position = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n      console.log(droppedCard.text);\n      onCardRestored(position, droppedCard);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    initialPosition: position,\n    size: thisSize,\n    onDragStart: onDragStart,\n    zIndexOrder: zIndexOrder,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: infoPanelRef,\n      style: {\n        position: 'absolute',\n        width: thisSize.x,\n        height: thisSize.y,\n        left: position.x + 'px',\n        top: position.y + 'px',\n        border: '1px solid black',\n        backgroundColor: 'lightGreen',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        alignItems: 'center'\n      },\n      children: [\"Info Panel\", droppedCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            zIndex: 2000,\n            width: thisSize.x * 2,\n            height: thisSize.y * 2,\n            top: -200 + 'px',\n            left: -55 + 'px',\n            border: '1px solid black',\n            backgroundColor: 'lightGreen',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-around',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), droppedCard.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          text: droppedCard.text,\n          onClick: handleRecoverCard\n\n          //onDragStart={() => handleDragStart(index)}\n          //onDragEnd={handleCardDragEnd}\n          //onDragMove={handleCardMove}\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Droppable, {\n        cardMoving: cardMoving,\n        mousePosition: mousePosition,\n        onCardEnter: handleCardEnter,\n        onCardLeave: handleCardLeave,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: dropZoneSize.x,\n            height: dropZoneSize.y,\n            border: '1px solid black',\n            backgroundColor: !isDropZoneActive ? 'green' : 'transparent',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-around',\n            alignItems: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(InfoPanel, \"5GWmR/zKuqsThV7/AakB2x4OYZA=\");\n_c = InfoPanel;\nexport default InfoPanel;\nvar _c;\n$RefreshReg$(_c, \"InfoPanel\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Draggable","Droppable","jsxDEV","_jsxDEV","InfoPanel","position","onDragStart","cardMoving","mousePosition","onCardDropInsideDropZone","zIndexOrder","droppedCard","onCardRestored","_s","infoPanelRef","thisSize","x","y","dropZoneRef","dropZoneSize","isDropZoneActive","setIsDropZoneActive","handleCardEnter","console","log","handleCardLeave","handleRecoverCard","rect","current","getBoundingClientRect","left","width","top","height","text","initialPosition","size","children","ref","style","border","backgroundColor","display","flexDirection","justifyContent","alignItems","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","description","Card","onClick","index","onCardEnter","onCardLeave","_c","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/jeu-de-tri-de-cartes/src/components/InfoPanel.js"],"sourcesContent":["// InfoPanel.js\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Draggable from './Draggable';\nimport Droppable from './Droppable';\n\nconst InfoPanel = ({ position, onDragStart, cardMoving, mousePosition, onCardDropInsideDropZone, zIndexOrder, droppedCard, onCardRestored }) => {\n    const infoPanelRef = useRef();\n    const thisSize = ({ x: 110, y: 120 });\n    const dropZoneRef = useRef();\n    const dropZoneSize = { x: 100, y: 70 };\n\n    const [isDropZoneActive, setIsDropZoneActive] = useState(false);\n\n    const handleCardEnter = () => {\n        console.log(`Card entered infoPanel dropZone!`);\n        setIsDropZoneActive(true);\n    };\n\n    const handleCardLeave = () => {\n        console.log(`Card left infoPanel dropZone!`);\n        setIsDropZoneActive(false);\n    };\n\n    useEffect(() => {\n        if (isDropZoneActive) {\n            onCardDropInsideDropZone(\"InfoPanel\");\n            setIsDropZoneActive(false);\n        }\n    }, [cardMoving]);\n\n    const handleRecoverCard = () => {\n        if (droppedCard) {\n            const rect = infoPanelRef.current.getBoundingClientRect();\n            const position = {\n                x: rect.left + rect.width / 2,\n                y: rect.top + rect.height / 2,\n            };\n            console.log(droppedCard.text);\n            onCardRestored(position, droppedCard)\n        }\n    };\n\n    return (\n        <Draggable\n            initialPosition={position}\n            size={thisSize}\n            onDragStart={onDragStart}\n            zIndexOrder={zIndexOrder}\n        >\n            <div\n                ref={infoPanelRef}\n                style={{\n                    position: 'absolute',\n                    width: thisSize.x,\n                    height: thisSize.y,\n                    left: position.x + 'px',\n                    top: position.y + 'px',\n\n                    border: '1px solid black',\n                    backgroundColor: 'lightGreen',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'space-around',\n                    alignItems: 'center',\n                }}\n            >\n                Info Panel\n\n                {droppedCard ? (\n                    <div>\n                        <div\n                            style={{\n                                position: 'absolute',\n                                zIndex: 2000,\n                                width: thisSize.x * 2,\n                                height: thisSize.y * 2,\n                                top: -200 + 'px',\n                                left: -55 + 'px',\n\n                                border: '1px solid black',\n                                backgroundColor: 'lightGreen',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'space-around',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <br />\n                            {droppedCard.description}\n                        </div>\n\n                        <Card\n                            key={index}\n                            text={droppedCard.text}\n                            onClick={handleRecoverCard}\n\n                            //onDragStart={() => handleDragStart(index)}\n                            //onDragEnd={handleCardDragEnd}\n                            //onDragMove={handleCardMove}\n                        />)\n                    </div>\n                ) : (\n                        <Droppable\n                            cardMoving={cardMoving}\n                            mousePosition={mousePosition}\n                            onCardEnter={handleCardEnter}\n                            onCardLeave={handleCardLeave}\n                        >\n                            <div\n                                style={{\n                                    width: dropZoneSize.x,\n                                    height: dropZoneSize.y,\n                                    border: '1px solid black',\n                                    backgroundColor: !isDropZoneActive ? 'green' : 'transparent',\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    justifyContent: 'space-around',\n                                    alignItems: 'center',\n                                }}\n                            >\n                            </div>\n                        </Droppable>\n                    )}\n            </div>\n        </Draggable>\n    );\n};\n\nexport default InfoPanel;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}