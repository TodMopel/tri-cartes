{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const Droppable=_ref=>{let{children,cardMoving,mousePosition,onCardEnter,onCardLeave}=_ref;const droppableRef=useRef(null);const[isMouseOverZone,setIsMouseOverZone]=useState(false);useEffect(()=>{if(cardMoving&&mousePosition){const droppableElement=droppableRef.current;if(droppableElement){const rect=droppableElement.getBoundingClientRect();const isMouseOverRect=mousePosition.x>=rect.left&&mousePosition.x<=rect.right&&mousePosition.y>=rect.top&&mousePosition.y<=rect.bottom;setIsMouseOverZone(isMouseOverRect);}}},[mousePosition]);useEffect(()=>{if(isMouseOverZone){onCardEnter();}else{onCardLeave();}},[isMouseOverZone]);return/*#__PURE__*/_jsx(\"div\",{ref:droppableRef,children:children});};export default Droppable;","map":{"version":3,"names":["React","useRef","useState","useEffect","jsx","_jsx","Droppable","_ref","children","cardMoving","mousePosition","onCardEnter","onCardLeave","droppableRef","isMouseOverZone","setIsMouseOverZone","droppableElement","current","rect","getBoundingClientRect","isMouseOverRect","x","left","right","y","top","bottom","ref"],"sources":["/Users/todmopel/TheHangar/test deploy/tri-cartes/src/components/Droppable.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst Droppable = ({ children, cardMoving, mousePosition, onCardEnter, onCardLeave }) => {\n    const droppableRef = useRef(null);\n    const [isMouseOverZone, setIsMouseOverZone] = useState(false);\n\n    useEffect(() => {\n        if (cardMoving && mousePosition) {\n            const droppableElement = droppableRef.current;\n            if (droppableElement) {\n                const rect = droppableElement.getBoundingClientRect();\n                const isMouseOverRect = (\n                    mousePosition.x >= rect.left &&\n                    mousePosition.x <= rect.right &&\n                    mousePosition.y >= rect.top &&\n                    mousePosition.y <= rect.bottom\n                );\n                setIsMouseOverZone(isMouseOverRect);\n            }\n        }\n    }, [mousePosition]);\n\n    useEffect(() => {\n        if (isMouseOverZone) {\n            onCardEnter();\n        } else {\n            onCardLeave();\n        }\n    }, [isMouseOverZone]);\n\n    return (\n        <div\n            ref={droppableRef}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default Droppable;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3D,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAuE,IAAtE,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,aAAa,CAAEC,WAAW,CAAEC,WAAY,CAAC,CAAAL,IAAA,CAChF,KAAM,CAAAM,YAAY,CAAGZ,MAAM,CAAC,IAAI,CAAC,CACjC,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE7DC,SAAS,CAAC,IAAM,CACZ,GAAIM,UAAU,EAAIC,aAAa,CAAE,CAC7B,KAAM,CAAAM,gBAAgB,CAAGH,YAAY,CAACI,OAAO,CAC7C,GAAID,gBAAgB,CAAE,CAClB,KAAM,CAAAE,IAAI,CAAGF,gBAAgB,CAACG,qBAAqB,CAAC,CAAC,CACrD,KAAM,CAAAC,eAAe,CACjBV,aAAa,CAACW,CAAC,EAAIH,IAAI,CAACI,IAAI,EAC5BZ,aAAa,CAACW,CAAC,EAAIH,IAAI,CAACK,KAAK,EAC7Bb,aAAa,CAACc,CAAC,EAAIN,IAAI,CAACO,GAAG,EAC3Bf,aAAa,CAACc,CAAC,EAAIN,IAAI,CAACQ,MAC3B,CACDX,kBAAkB,CAACK,eAAe,CAAC,CACvC,CACJ,CACJ,CAAC,CAAE,CAACV,aAAa,CAAC,CAAC,CAEnBP,SAAS,CAAC,IAAM,CACZ,GAAIW,eAAe,CAAE,CACjBH,WAAW,CAAC,CAAC,CACjB,CAAC,IAAM,CACHC,WAAW,CAAC,CAAC,CACjB,CACJ,CAAC,CAAE,CAACE,eAAe,CAAC,CAAC,CAErB,mBACIT,IAAA,QACIsB,GAAG,CAAEd,YAAa,CAAAL,QAAA,CAEjBA,QAAQ,CACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAAF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}