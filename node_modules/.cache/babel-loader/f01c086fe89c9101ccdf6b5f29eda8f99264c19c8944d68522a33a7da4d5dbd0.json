{"ast":null,"code":"var _jsxFileName = \"/Users/todmopel/TheHangar/test deploy/tri-cartes/src/pages/ResultPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport config from './../data/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryNode = ({\n  categoryName,\n  jobs,\n  onDeleteJob\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"category-node center-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-name\",\n      children: categoryName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"jobs-list\",\n      children: [activeJobs.map((job, index) => job.isActive && /*#__PURE__*/_jsxDEV(JobNode, {\n        job: job,\n        onDelete: () => onDeleteJob(categoryName, job)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this)), gameData.cardList.map((card, index) => card.isActive && /*#__PURE__*/_jsxDEV(Card, {\n        text: card.text,\n        position: card.position,\n        zIndexOrder: card.zIndex,\n        onDragStart: () => handleDragStart(index, null),\n        onDragEnd: () => handleDragEnd(index, null)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = CategoryNode;\nconst JobNode = ({\n  job,\n  onDelete\n}) => {\n  _s();\n  const [selected, setSelected] = useState(false);\n  const onSelect = () => {\n    setSelected(!selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"job-node row-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onSelect,\n      className: `job-text ${selected ? 'job-text-selected' : ''}`,\n      children: job.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"delete-button button-small\",\n      onClick: onDelete,\n      children: config.result.deleteJobButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(JobNode, \"jTu/AeLw5BOy6ZW1dDNXzAJjzwE=\");\n_c2 = JobNode;\nconst ResultPage = ({\n  resultData\n}) => {\n  _s2();\n  const [resultTable, setResultTable] = useState([]);\n  useEffect(() => {\n    setResultTable(resultData);\n  }, [resultData]);\n  const handleDeleteJob = (categoryName, job) => {\n    const updatedResultTable = resultTable.map(category => {\n      if (category.categoryName === categoryName) {\n        return {\n          ...category,\n          jobs: category.jobs.map(j => j.text === job.text ? {\n            ...j,\n            isActive: false\n          } : j)\n        };\n      }\n      return category;\n    });\n    setResultTable(updatedResultTable);\n  };\n  const activeCategories = resultTable.filter(category => category.jobs.some(job => job.isActive));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-grid result-page center-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-content-spread\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: config.result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: config.result.subTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"result-list\",\n        children: activeCategories && activeCategories.map((category, index) => /*#__PURE__*/_jsxDEV(CategoryNode, {\n          categoryName: category.categoryName,\n          jobs: category.jobs,\n          onDeleteJob: handleDeleteJob\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-card ui-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/tri-cartes/\",\n          className: \"button button-normal\",\n          children: \"Retourner \\xE0 l'accueil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s2(ResultPage, \"XGu6EouHr3+3LBLIWSeajIbuTjo=\");\n_c3 = ResultPage;\nexport default ResultPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CategoryNode\");\n$RefreshReg$(_c2, \"JobNode\");\n$RefreshReg$(_c3, \"ResultPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","config","jsxDEV","_jsxDEV","CategoryNode","categoryName","jobs","onDeleteJob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","activeJobs","map","job","index","isActive","JobNode","onDelete","gameData","cardList","card","Card","text","position","zIndexOrder","zIndex","onDragStart","handleDragStart","onDragEnd","handleDragEnd","_c","_s","selected","setSelected","onSelect","onClick","result","deleteJobButton","_c2","ResultPage","resultData","_s2","resultTable","setResultTable","handleDeleteJob","updatedResultTable","category","j","activeCategories","filter","some","title","subTitle","to","_c3","$RefreshReg$"],"sources":["/Users/todmopel/TheHangar/test deploy/tri-cartes/src/pages/ResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport config from './../data/config';\n\nconst CategoryNode = ({ categoryName, jobs, onDeleteJob }) => {\n    return (\n        <li className=\"category-node center-content\">\n            <div className=\"category-name\">{categoryName}</div>\n            <ul className=\"jobs-list\">\n                {activeJobs.map((job, index) => (\n                    job.isActive && (\n                        <JobNode key={index} job={job} onDelete={() => onDeleteJob(categoryName, job)} />)\n                ))}\n\n                {gameData.cardList.map((card, index) => (\n                    card.isActive && (\n                        <Card\n                            key={index}\n                            text={card.text}\n                            position={card.position}\n                            zIndexOrder={card.zIndex}\n\n                            onDragStart={() => handleDragStart(index, null)}\n                            onDragEnd={() => handleDragEnd(index, null)}\n                        />)\n                ))}\n            </ul>\n        </li>\n    );\n};\n\nconst JobNode = ({ job, onDelete }) => {\n    const [selected, setSelected] = useState(false);\n\n    const onSelect = () => {\n        setSelected(!selected);\n    };\n\n    return (\n        <li className=\"job-node row-content\">\n            <span onClick={onSelect} className={`job-text ${selected ? 'job-text-selected' : ''}`}>{job.text}</span>\n            <span className=\"delete-button button-small\" onClick={onDelete}>{config.result.deleteJobButton}</span>\n        </li>\n    );\n};\n\nconst ResultPage = ({ resultData }) => {\n    const [resultTable, setResultTable] = useState([]);\n\n    useEffect(() => {\n        setResultTable(resultData);\n    }, [resultData]);\n\n    const handleDeleteJob = (categoryName, job) => {\n        const updatedResultTable = resultTable.map((category) => {\n            if (category.categoryName === categoryName) {\n                return {\n                    ...category,\n                    jobs: category.jobs.map((j) => (j.text === job.text ? { ...j, isActive: false } : j)),\n                };\n            }\n            return category;\n        });\n\n        setResultTable(updatedResultTable);\n    };\n\n    const activeCategories = resultTable.filter((category) => category.jobs.some((job) => job.isActive));\n\n    return (\n        <div className=\"background-grid result-page center-content\">\n            <div className=\"center-content-spread\">\n                <div>\n                    <h1>{config.result.title}</h1>\n                    <h3>{config.result.subTitle}</h3>\n                </div>\n                <ul className=\"result-list\">\n                    {activeCategories &&\n                        activeCategories.map((category, index) => (\n                            <CategoryNode\n                                key={index}\n                                categoryName={category.categoryName}\n                                jobs={category.jobs}\n                                onDeleteJob={handleDeleteJob}\n                            />\n                        ))}\n                </ul>\n                <div className=\"ui-card ui-button-container\">\n                    <Link to=\"/tri-cartes/\" className=\"button button-normal\">\n                        Retourner à l'accueil\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ResultPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}